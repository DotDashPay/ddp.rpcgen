{# This macro avoids having to repeat code for the standalone extended example #}
{% macro render(is_example=True) -%}
{% if is_example %}
#import "DotDashPayAPI.h"
{% endif %}

void DDPExample_{{method.name}}() {
  {% if is_example %}
  // @example-args({{service.name}}.{{method.name}})
  {% endif %}
  {{generator.class_prefix()}}{{method.name}}Args* args = [[{{generator.class_prefix()}}{{method.name}}Args alloc] init];
  {% for field in (method.name | find_arguments_proto_by_method_name).field %}
  {% if field.name != "META" %}
  args.{{field.name | recase}} = {{field.name | get_example_value_for_field}};
  {% endif %}
  {% endfor %}
  {% if is_example %}
  // @example-args-end()

  // @example-request({{service.name}}.{{method.name}})
  {% endif %}
  [DotDashPayAPI.{{service.name|lowercase_first_letter}} {{method.name|lowercase_first_letter}}:args onError:^(DDPErrorResponse* error) {
      LOG(ERROR, @"%@", error.errorMessage);
    }{% for resp in method | get_method_options %} on{{resp.name}}:^({{generator.class_prefix()}}{{resp.name}}* response) {
      LOG(INFO, @"@Received on{{resp.name}} response: %@", response);
      {% set first = True %}
      {% for field in (resp.name | find_proto_by_name).field %}
      {% if field.name != "META" %}
      {% if first %}
      {% set first = False %}
      {{generator.get_type_name(field.type)}} {{field.name | recase}} = response.{{field.name | recase}}; // e.g. {{field.name | get_example_value_for_field}}
      {% else %}
      {{generator.get_type_name(field.type)}} {{field.name | recase}} = response.{{field.name | recase}}; // {{field.name | get_example_value_for_field}}

      {% endif %}
      {% endif %}
      {% endfor %}
    }{% endfor %}];
  {% if is_example %}
  // @example-request-end()
  {% endif %}
}
{% endmacro %}
/**
   Autogenerated example for API request: {{method.name}}
**/

// @reference()
// @standalone(try_api_short)
DDPSetupArgs* setupArgs = [[DDPSetupArgs alloc] init];
setupArgs.apiToken = @"@api-token()";
setupArgs.simulate = YES;
[DotDashPayAPI.setup setup:setupArgs];

DDPReceivePaymentDataThenSettleArgs* args = [[DDPReceivePaymentDataThenSettleArgs alloc] init];
args.cents = 100;

[DotDashPayAPI.payment receivePaymentDataThenSettle:args onError:^(DDPErrorResponse* error) {
    LOG(ERROR, @"Error while executing receivePaymentDataThenSettle: %@", error.description);
  } onSettled:^(DDPSettled* response) {
    LOG(INFO, @"Settlement finished! Transaction id: %@", response.settleId);
  }];
// @standalone-end()
// @reference-end()
// @reference()
// @single(example-args(Setup.Setup))
DDPSetupArgs* setupArgs = [[DDPSetupArgs alloc] init];
setupArgs.apiToken = @"api-key";
setupArgs.simulate = YES;
setupArgs.processorSandboxMode = YES;

// @single-end()
// @single(example-request(Setup.Setup))
[DotDashPayAPI.setup setup:setupArgs];
// @single-end()
// @reference-end()
{% if method.name == "ReceivePaymentDataThenSettle" %}
// @reference()
// @standalone(try_api_expanded)
DDPSetupArgs* setupArgs = [[DDPSetupArgs alloc] init];
setupArgs.apiToken = @"api-key";
setupArgs.simulate = YES;
[DotDashPayAPI.setup setup:setupArgs];

{{render(is_example=False)}}
// @standalone-end()
// @reference-end()
{% endif %}

{{render()}}
